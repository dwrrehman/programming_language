
comment
	forwards branches dont work!  i actually dont even know how to fix them either...

		it turns out, we need to do the branch reloff calc at the label!!! which is totally stupid. why do we? becauseeeeee we need to know the actual value of the forwards label, AT CT
			before we CT-interprettt the subtract and decr CT-instructions. 

			which perform the addr reloff calc. 


	
			so yeah. thats the problem.


					i dont know how to solve it. 

	
	
				i think we just need to have the      "at"     or     "here"

						or      "now here"       instructions


							parsed wayyyyy earlier. 



						like, before anything else. 


						basically. which is kinda stupid. 


	
				
endcomment








zero 000 xor now xor


	transfer define 
		zero swap1 001 021 addi 
	endmacro


one literal 21 
	transfer

random1 literal a1999999  
	transfer


random2 literal a2999999  
	transfer


random3 literal a3999999  
	transfer


random4 literal a4999999  
	transfer


random5 literal a5999999  
	transfer



count literal a5
	transfer


comment ------------------------------------ endcomment

	at define 
		now here 
	endmacro

	ctdecr define use literal 21 swap1 001 now sub endmacro

	_______branch define    comment   this macro is not useful anymore. endcomment
		swap2 
		use at 
		swap1 use now sub ctdecr 
		swap2 swap3 
		swap1 swap4
		blt
	endmacro

	goto define 
		zero zero beq
	endmacro 

	setzero define
		000 xor
	endmacro

	incr define 
		use literal 21 swap1 001 addi 
	endmacro

comment ----------------------------- endcomment 


	i setzero
	count print
	

	random5 print 
	i print
	random5 print


_begin at

	random4 print
	i print
	count print
	random4 print

	_end i count beq

	random1 print 
	i print
	random1 print

	i incr 

	random2 print 
	i print
	random2 print


	_begin zero zero beq
	zero print

_end at

	random3 print 
	i print
	random3 print 


	debughalt





comment -------- macros ----------- endcomment



decr define 
	use literal gffffffffffffffff 
	swap1 001 addi 
endmacro










comment -------- literals ----------- endcomment




comment




i 000 xor
first literal a34   	transfer
second literal a3   	transfer

random literal a999999  transfer
random1 literal a199999  transfer
random2 literal a299999  transfer








	second i i add print 

	random1 print
	

looplabel at
	i incr print

atbranch at
	looplabel use now sub 
	ctdecr
	first i blt


	random print 

	one literal 21 	transfer 




loop_begin at 

	loop_end  i second branch

	i decr print

	loop_begin goto

loop_end at 
	random2 print







endcomment


